/**
 * Ejercicio: Crear un arreglo de una lista de tareas del año,
 * donde cada mes sea un arreglo de días y, a la vez, cada día sea un arreglo de tareas
 */

 let taskList = Array(12).fill(0).map((item, i)=>{
    switch(i){
        case 0:
            item = Array(31).fill([]);
            break;
        case 1:
            item = (new Date().getFullYear() % 4 === 0) ? Array(29).fill([]) : Array(28).fill([]);
            break;
        case 2:
            item = Array(31).fill([]);
            break;
        case 3:
            item = Array(30).fill([]);
            break;
        case 4:
            item = Array(31).fill([]);
            break;
        case 5:
            item = Array(30).fill([]);
            break;
        case 6:
            item = Array(31).fill([]);
            break;
        case 7:
            item = Array(31).fill([]);
            break;
        case 8:
            item = Array(30).fill([]);
            break;
        case 9:
            item = Array(31).fill([]);
            break;
        case 10:
            item = Array(30).fill([]);
            break;
        case 11:
            item = Array(31).fill([]);
            break;
    }
    return item;
});
console.log(taskList);

/**
 * Salida:
 * [
  [
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], []
  ],
  [
    [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [],
    [], [], [], []
  ],
  [
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], []
  ],
  [
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], []
  ],
  [
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], []
  ],
  [
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], []
  ],
  [
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], []
  ],
  [
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], []
  ],
  [
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], []
  ],
  [
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], []
  ],
  [
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], []
  ],
  [
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], []
  ]
]
 * 
 */
